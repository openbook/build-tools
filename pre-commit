#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

ROOT_DIR=$(git rev-parse --show-toplevel)
ABS_PATH="{PATH TO BUILD TOOLS}"
JSLINT="$ABS_PATH/JSLint/fulljslint.js"
JSLINT4JAVA="$ABS_PATH/jslint4java/jslint4java-2.0.0/jslint4java-2.0.0.jar"

# The csslint rules to use
# The current selection is based on discussion here: http://mattwilcox.net/archive/entry/id/1054/
CSSLINT_RULES="display-property-grouping,duplicate-properties,empty-rules,known-properties,box-sizing,compatible-vendor-prefixes,gradients,vendor-prefix,import,zero-units,shorthand,important"
CSSLINT_RHINO="$ABS_PATH/csslint/release/csslint-rhino.js"
RHINO_JAR="$ABS_PATH/rhino/rhino1_7R3/js.jar"

PHPPRECOMMIT="$ABS_PATH/php/pre-commit.php"

###########################   JS Lint    ###########################

JSLINTCMD="${JSLINT4JAVA} --jslint ${JSLINT}"

for file in $(git diff-index --name-only --cached HEAD -- | grep -P '\.((js)|(html)|(json))$'); do

    jstest=$(java -jar $JSLINTCMD $file)

    if [ -n "$jstest" ] ; then

        printf "JS error in $file \n$jstest"
        exit 1

    fi

done


###########################   CSS Lint    ###########################

CSSLINTCMD="${RHINO_JAR} $CSSLINT_RHINO --format=text --rules=$CSSLINT_RULES"

for file in $(git diff-index --name-only --cached HEAD -- | grep -P '\.css$'); do

    csstest=$(java -jar ${CSSLINTCMD} $file)

    if [ -n "$csstest" ] ; then

        printf "CSS error in $file \n$csstest"
        exit 1

    fi

done

###########################   XML Lint    ###########################

for file in $(git diff-index --name-only --cached HEAD -- | grep -P '\.((xml)|(xsl))$'); do

    xmltest=$(xmllint --noout ${file})

    if [ $? -gt 0 ] ; then

        printf "XML error in $file \n$xmltest"
        exit 1

    fi

done

###########################   PHP Lint    ###########################

PHPCMD=$("${PHPPRECOMMIT}")

if [ $? -eq 1 ] ; then

    printf "PHP errors\n$PHPCMD"
    exit 1

fi


############   ALL GOOD! WELL DONE! GOOD JOB! EXIT    ###############

exit 0